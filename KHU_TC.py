# -*- coding: utf-8 -*-
"""KHU-TC.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19TCXZQ387qGqakwRXzYUhJmCfGZW1xFa
"""

import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import odeint

st.set_page_config(page_title="KHU-Transit Compartment Simulator", layout="centered")
st.title("KHU-Transit Compartment Model Simulator")

# -------------------------------
# 📦 Transit Compartment Model
# -------------------------------

def transit_model(y, t, n, k_tr):
    dydt = np.zeros(n + 1)
    dydt[0] = -k_tr * y[0]
    for i in range(1, n):
        dydt[i] = k_tr * (y[i - 1] - y[i])
    dydt[n] = k_tr * y[n - 1]  # absorption or final compartment
    return dydt

def simulate_transit(n, k_tr, dose, t_end=24, num_points=500):
    y0 = np.zeros(n + 1)
    y0[0] = dose
    t = np.linspace(0, t_end, num_points)
    sol = odeint(transit_model, y0, t, args=(n, k_tr))
    return t, sol

# -------------------------------
# 🧑‍💻 User Inputs
# -------------------------------

n = st.number_input("Number of Transit Compartments", min_value=1, max_value=20, value=5, step=1)
k_tr = st.number_input("Transit Rate (k_tr, 1/hr)", min_value=0.01, value=1.0, step=0.1)
dose = st.number_input("Initial Dose", min_value=0.0, value=100.0, step=10.0)
t_end = st.number_input("Simulation Time (hr)", min_value=1, value=24, step=1)

# 선택할 수 있는 compartment 리스트
available_compartments = [f"Compartment {i}" for i in range(int(n))] + ["Absorption"]
selected_compartments = st.multiselect(
    "Select Compartments to Display",
    available_compartments,
    default=["Absorption"]
)

# -------------------------------
# 📈 Simulation and Plotting
# -------------------------------

if st.button("Run Simulation"):
    t, sol = simulate_transit(int(n), k_tr, dose, t_end)

    # 이름 → 인덱스 매핑
    comp_to_idx = {f"Compartment {i}": i for i in range(int(n))}
    comp_to_idx["Absorption"] = int(n)

    fig, ax = plt.subplots()
    for comp in selected_compartments:
        idx = comp_to_idx[comp]
        ax.plot(t, sol[:, idx], label=comp)

    ax.set_xlabel("Time (hr)")
    ax.set_ylabel("Amount")
    ax.set_title("Transit Compartment Concentration")
    ax.legend()
    st.pyplot(fig)